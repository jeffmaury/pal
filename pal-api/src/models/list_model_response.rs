/*
 * Podman Desktop AI Lab API
 *
 * API for interacting with the Podman Desktop AI Lab service.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ListModelResponse : Response from a list request
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ListModelResponse {
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "model", skip_serializing_if = "Option::is_none")]
    pub model: Option<String>,
    #[serde(rename = "modified_at", skip_serializing_if = "Option::is_none")]
    pub modified_at: Option<String>,
    #[serde(rename = "size", skip_serializing_if = "Option::is_none")]
    pub size: Option<i32>,
    #[serde(rename = "digest", skip_serializing_if = "Option::is_none")]
    pub digest: Option<String>,
    #[serde(rename = "details", skip_serializing_if = "Option::is_none")]
    pub details: Option<Box<models::ModelDetails>>,
}

impl ListModelResponse {
    /// Response from a list request
    pub fn new() -> ListModelResponse {
        ListModelResponse {
            name: None,
            model: None,
            modified_at: None,
            size: None,
            digest: None,
            details: None,
        }
    }
}

